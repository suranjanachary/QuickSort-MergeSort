function oppMergeSort(arr,low,high){
    if (low == high){
        return;
    }
    var mid = Math.floor((low + high)/2);
    oppMergeSort(arr,low,mid);
    oppMergeSort(arr,mid+1,high);
    merge(arr,low,high,mid);
}
function copyArray(arr,left,right){
    var ans = [];
    for (var i = left;i<=right;i++){
        ans.push(arr[i]);
    }return ans;
}
function merge(arr,low,high,mid){
    var arr1 = copyArray(arr,low,mid);
    var arr2 = copyArray(arr,mid+1,high);
    var p1 = 0;
    var p2 = 0;
    var pt = low;
    while(p1 < arr1.length && p2 < arr2.length){
        if (arr1[p1] <= arr2[p2]){
            arr[pt] = arr1[p1];
            p1++;
        }else{
            arr[pt] = arr2[p2];
            p2++;
        }
        pt++;
    }while(p1 < arr1.length){
        arr[pt] = arr1[p1];
        p1++;
        pt++;
    }while(p2 < arr2.length){
        arr[pt] = arr2[p2];
        p2++;
        pt++;
    }
}
function runProgram(input) {
  input=input.trim().split("\n");
  let n=+input[0];
  let arr=input[1].trim().split(" ").map(Number);
  let low=0;
  let high=n-1;
  oppMergeSort(arr,low,high)
  console.log(arr.join(" "))
}
if (process.env.USER === "") {
  runProgram(``);
} else {
  process.stdin.resume();
  process.stdin.setEncoding("ascii");
  let read = "";
  process.stdin.on("data", function (input) {
    read += input;
  });
  process.stdin.on("end", function () {
    read = read.replace(/\n$/, "");
    read = read.replace(/\n$/, "");
    runProgram(read);
  });
  process.on("SIGINT", function () {
    read = read.replace(/\n$/, "");
    runProgram(read);
    process.exit(0);1 ``
  });
}
